export declare enum AstNodeType {
    Token = "Token",
    TokenSequence = "TokenSequence",
    Text = "Text",
    Operator = "Operator",
    Module = "Module",
    Program = "Program",
    Keyword = "Keyword",
    DebuggerKeyword = "DebuggerKeyword",
    CommentLine = "CommentLine",
    CommentBlock = "CommentBlock",
    Number = "Number",
    String = "String",
    RegexLiteral = "RegexLiteral",
    Boolean = "Boolean",
    Array = "Array",
    Object = "Object",
    Function = "Function",
    Identifier = "Identifier",
    IdentifierScope = "IdentifierScope",
    RawIdentifier = "RawIdentifier",
    ContextIdentifier = "ContextIdentifier",
    VariableDeclaration = "VariableDeclaration",
    PropertyDeclaration = "PropertyDeclaration",
    BreakStatement = "BreakStatement",
    ContinueStatement = "ContinueStatement",
    BlockStatement = "BlockStatement",
    IfStatement = "IfStatement",
    SwitchStatement = "SwitchStatement",
    CaseStatement = "CaseStatement",
    WhileStatement = "WhileStatement",
    DoWhileStatement = "DoWhileStatement",
    ForStatement = "ForStatement",
    ForInStatement = "ForInStatement",
    ForOfStatement = "ForOfStatement",
    ImportStatement = "ImportStatement",
    RawImportStatement = "RawImportStatement",
    ImportItem = "ImportItem",
    TryStatement = "TryStatement",
    CatchStatement = "CatchStatement",
    FinallyStatement = "FinallyStatement",
    ThrowStatement = "ThrowStatement",
    ExportStatement = "ExportStatement",
    ClassDeclaration = "ClassDeclaration",
    KeywordNode = "KeywordNode",
    ParenExpression = "ParenExpression",
    CallExpression = "CallExpression",
    UpdateExpression = "UpdateExpression",
    BinaryExpression = "BinaryExpression",
    MemberExpression = "MemberExpression",
    IndexerExpression = "IndexerExpression",
    ConditionalExpression = "ConditionalExpression",
    OuterStatement = "OuterStatement",
    TextLineStatement = "TextLineStatement",
    ObjectLineStatement = "ObjectLineStatement",
    StringIncludeStatement = "StringIncludeStatement",
    PrototypeExpression = "PrototypeExpression",
    DeleteLineExpression = "DeleteLineExpression",
    Scope = "Scope"
}
